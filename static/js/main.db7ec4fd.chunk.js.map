{"version":3,"sources":["Components/Statistic/index.js","Components/Feedback/index.js","Components/Notifications/index.js","app.js","index.js"],"names":["Statistic","state","total","positiv","good","neutral","bad","defaultProps","Feedback","onClick","className","Notification","note","App","handleClick","e","setState","prevState","countTotalFeedback","Object","values","reduce","acc","item","countPositiveFeedbackPercentage","Math","round","this","countPositiv","Component","ReactDOM","render","document","getElementById"],"mappings":"qRAIMA,G,YAAY,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,QACzBC,EAAuBH,EAAvBG,KAAMC,EAAiBJ,EAAjBI,QAASC,EAAQL,EAARK,IACvB,OACE,oCACE,0CACA,oCAAUF,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWJ,GACX,wCAAcC,EAAd,QAWNH,EAAUO,aAAe,CACvBL,MAAO,EACPC,QAAS,GAGIH,QCbAQ,G,MAbE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAClB,OACE,oCACE,mDACA,yBAAKC,UAAU,cACb,4BAAQD,QAAS,kBAAMA,EAAQ,UAA/B,QACA,4BAAQA,QAAS,kBAAMA,EAAQ,aAA/B,WACA,4BAAQA,QAAS,kBAAMA,EAAQ,SAA/B,WCJOE,EAJM,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtB,OAAO,4BAAKA,IC+CCC,E,kDA3Cb,aAAe,IAAD,8BACZ,gBAQFC,YAAc,SAAAC,GACZ,EAAKC,UAAS,SAAAC,GAAS,sBAAQF,EAAIE,EAAUF,GAAK,OAVtC,EAcdG,mBAAqB,WACnB,OAAOC,OAAOC,OAAO,EAAKnB,OAAOoB,QAAO,SAACC,EAAKC,GAC5C,OAAOD,EAAMC,IACZ,IAjBS,EAmBdC,gCAAkC,SAAAtB,GAChC,OAAIA,EAAQ,EACHuB,KAAKC,MAAO,EAAKzB,MAAMG,KAAOF,EAAS,KAEvC,GApBT,EAAKD,MAAQ,CACXG,KAAM,EACNC,QAAS,EACTC,IAAK,GANK,E,qDA4BZ,IAAMJ,EAAQyB,KAAKT,qBACbU,EAAeD,KAAKH,gCAAgCtB,GAC1D,OACE,oCACE,kBAAC,EAAD,CAAUO,QAASkB,KAAKb,cACvBZ,EAAQ,EACP,kBAAC,EAAD,CAAWD,MAAO0B,KAAK1B,MAAOC,MAAOA,EAAOC,QAASyB,IAErD,kBAAC,EAAD,CAAchB,KAAM,2B,GArCZiB,aCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.db7ec4fd.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './style.scss';\r\n\r\nconst Statistic = ({ state, total, positiv }) => {\r\n  const { good, neutral, bad } = state;\r\n  return (\r\n    <>\r\n      <h2>Statistic:</h2>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>Positive: {positiv}%</p>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistic.propTypes = {\r\n  state: PropTypes.object.isRequired,\r\n  total: PropTypes.number,\r\n  positiv: PropTypes.number.isRequired,\r\n};\r\n\r\nStatistic.defaultProps = {\r\n  total: 0,\r\n  positiv: 0,\r\n};\r\n\r\nexport default Statistic;\r\n","import React from 'react';\r\nimport './style.scss';\r\n\r\nconst Feedback = ({ onClick }) => {\r\n  return (\r\n    <>\r\n      <h1>Leave your feedback</h1>\r\n      <div className=\"buttonCont\">\r\n        <button onClick={() => onClick('good')}>Good</button>\r\n        <button onClick={() => onClick('neutral')}>Neutral</button>\r\n        <button onClick={() => onClick('bad')}>Bad</button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Feedback;\r\n","import React from 'react';\r\n\r\nconst Notification = ({ note }) => {\r\n  return <h2>{note}</h2>;\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\r\nimport './sass/main.scss';\r\nimport Statistic from './Components/Statistic';\r\nimport Feedback from './Components/Feedback';\r\nimport Notification from './Components/Notifications';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      good: 0,\r\n      neutral: 0,\r\n      bad: 0,\r\n    };\r\n  }\r\n  handleClick = e => {\r\n    this.setState(prevState => ({ [e]: prevState[e] + 1 }));\r\n  };\r\n\r\n  //\r\n  countTotalFeedback = () => {\r\n    return Object.values(this.state).reduce((acc, item) => {\r\n      return acc + item;\r\n    }, 0);\r\n  };\r\n  countPositiveFeedbackPercentage = total => {\r\n    if (total > 0) {\r\n      return Math.round((this.state.good / total) * 100);\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const total = this.countTotalFeedback();\r\n    const countPositiv = this.countPositiveFeedbackPercentage(total);\r\n    return (\r\n      <>\r\n        <Feedback onClick={this.handleClick} />\r\n        {total > 0 ? (\r\n          <Statistic state={this.state} total={total} positiv={countPositiv} />\r\n        ) : (\r\n          <Notification note={'No feedback given'} />\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}